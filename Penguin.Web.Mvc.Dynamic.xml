<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Penguin.Web.Mvc.Dynamic</name>
    </assembly>
    <members>
        <member name="T:Penguin.Web.Mvc.Dynamic.Constants">
            <summary>
            Static strings used by the dynamic rendering engine
            </summary>
        </member>
        <member name="P:Penguin.Web.Mvc.Dynamic.Constants.RootNamespace">
            <summary>
            The root namespace to strip off of all paths
            </summary>
        </member>
        <member name="T:Penguin.Web.Mvc.Dynamic.DynamicRenderer">
            <summary>
            Analyzes a serialized object and returns a list of validated view paths representing
            Prefered rendering paths
            </summary>
        </member>
        <member name="P:Penguin.Web.Mvc.Dynamic.DynamicRenderer.ExistingHandlers">
            <summary>
            A list of ViewResults that exist on disk
            </summary>
        </member>
        <member name="P:Penguin.Web.Mvc.Dynamic.DynamicRenderer.HasHtml">
            <summary>
            Figure out what this does and comment it
            </summary>
        </member>
        <member name="P:Penguin.Web.Mvc.Dynamic.DynamicRenderer.HasMatch">
            <summary>
            True if there are any views set up to handle this object
            </summary>
        </member>
        <member name="P:Penguin.Web.Mvc.Dynamic.DynamicRenderer.IsDynamic">
            <summary>
            True if the only view that can handle this object is the recursive view
            </summary>
        </member>
        <member name="P:Penguin.Web.Mvc.Dynamic.DynamicRenderer.Match">
            <summary>
            Chooses the first existing view with the highest priority
            </summary>
        </member>
        <member name="P:Penguin.Web.Mvc.Dynamic.DynamicRenderer.MatchedPath">
            <summary>
            The path to the view of highest matching priority
            </summary>
        </member>
        <member name="P:Penguin.Web.Mvc.Dynamic.DynamicRenderer.Results">
            <summary>
            A list of results for potential paths, as well as whether or not the paths exist on disk
            </summary>
        </member>
        <member name="M:Penguin.Web.Mvc.Dynamic.DynamicRenderer.#ctor(Penguin.Reflection.Serialization.Abstractions.Interfaces.IMetaType,Penguin.Reflection.Serialization.Abstractions.Interfaces.IMetaProperty,Microsoft.Extensions.FileProviders.IFileProvider)">
            <summary>
            Constructs a new instance of this renderer
            </summary>
            <param name="type">An optional override type</param>
            <param name="property">The IMetaProperty leading to this serialized object</param>
            <param name="fileProvider">A file provider used for checking for the existance of views</param>
        </member>
        <member name="M:Penguin.Web.Mvc.Dynamic.DynamicRenderer.#ctor(Penguin.Reflection.Serialization.Abstractions.Interfaces.IMetaProperty,Microsoft.Extensions.FileProviders.IFileProvider)">
            <summary>
            Constructs a new instance of this renderer
            </summary>
            <param name="property">The IMetaProperty leading to this serialized object</param>
            <param name="fileProvider">A file provider used for checking for the existance of views </param>
        </member>
        <member name="M:Penguin.Web.Mvc.Dynamic.DynamicRenderer.#ctor(Penguin.Web.Mvc.Dynamic.DynamicRendererSettings)">
            <summary>
            Constructs a new instance of this renderer
            </summary>
            <param name="settings">A collection of settings for the dynamic renderer</param>
        </member>
        <member name="T:Penguin.Web.Mvc.Dynamic.DynamicRendererSettings">
            <summary>
            Settings for the dynamic renderer
            </summary>
        </member>
        <member name="P:Penguin.Web.Mvc.Dynamic.DynamicRendererSettings.BasePath">
            <summary>
            A link to the base path for views for the editor.
            Points to Paths.EditBase
            </summary>
        </member>
        <member name="P:Penguin.Web.Mvc.Dynamic.DynamicRendererSettings.DynamicViewName">
            <summary>
            The name of the view used to render dynamic objects
            Default: Edit
            </summary>
        </member>
        <member name="P:Penguin.Web.Mvc.Dynamic.DynamicRendererSettings.ExactOnly">
            <summary>
            Only render Dynamic or Exact Matches. No intermediate types
            </summary>
        </member>
        <member name="P:Penguin.Web.Mvc.Dynamic.DynamicRendererSettings.FileProvider">
            <summary>
            A File Provider implementation used for checking for view
            </summary>
        </member>
        <member name="P:Penguin.Web.Mvc.Dynamic.DynamicRendererSettings.Property">
            <summary>
            The IMetaProperty that references the object being resolved
            </summary>
        </member>
        <member name="P:Penguin.Web.Mvc.Dynamic.DynamicRendererSettings.StartAtBottom">
            <summary>
            Render base types before inherited types
            </summary>
        </member>
        <member name="P:Penguin.Web.Mvc.Dynamic.DynamicRendererSettings.Type">
            <summary>
            An optional override type for the renderer
            </summary>
        </member>
        <member name="P:Penguin.Web.Mvc.Dynamic.DynamicRendererSettings.TypeFullName">
            <summary>
            If no type is set, the renderer can attempt to use this string value to determine routing
            </summary>
        </member>
        <member name="M:Penguin.Web.Mvc.Dynamic.DynamicRendererSettings.#ctor(Penguin.Reflection.Serialization.Abstractions.Interfaces.IMetaType,Penguin.Reflection.Serialization.Abstractions.Interfaces.IMetaProperty,Microsoft.Extensions.FileProviders.IFileProvider)">
            <summary>
            Constructs a new instance of the settings object
            </summary>
            <param name="type">An optional override type for the renderer</param>
            <param name="property">The IMetaProperty that references the object being resolved</param>
            <param name="fileProvider">A file provider used for checking for the existence of views</param>
        </member>
        <member name="M:Penguin.Web.Mvc.Dynamic.DynamicRendererSettings.#ctor(Penguin.Reflection.Serialization.Abstractions.Interfaces.IMetaProperty,Microsoft.Extensions.FileProviders.IFileProvider)">
            <summary>
            Constructs a new instance of the settings object
            </summary>
            <param name="property">The IMetaProperty that references the object being resolved</param>
            <param name="fileProvider">A file provider used for checking for views</param>
        </member>
        <member name="M:Penguin.Web.Mvc.Dynamic.DynamicRendererSettings.#ctor(System.Type,Microsoft.Extensions.FileProviders.IFileProvider)">
            <summary>
            Constructs a new instance of the settings object
            </summary>
            <param name="type">An optional override type for the renderer</param>
            <param name="fileProvider">A file provider used for checking for the existence of views</param>
        </member>
        <member name="M:Penguin.Web.Mvc.Dynamic.DynamicRendererSettings.#ctor(System.Reflection.PropertyInfo,Microsoft.Extensions.FileProviders.IFileProvider)">
            <summary>
            Constructs a new instance of the settings object
            </summary>
            <param name="property">The IMetaProperty that references the object being resolved</param>
            <param name="fileProvider">A file provider used for checking for the existence of views</param>
        </member>
        <member name="M:Penguin.Web.Mvc.Dynamic.DynamicRendererSettings.#ctor(Penguin.Reflection.Serialization.Abstractions.Interfaces.IMetaObject,Microsoft.Extensions.FileProviders.IFileProvider)">
            <summary>
            Constructs a new instance of the settings object
            </summary>
            <param name="o">An IMetaObject instance to render out</param>
            <param name="fileProvider">A file provider used for checking for the existence of views</param>
        </member>
        <member name="M:Penguin.Web.Mvc.Dynamic.DynamicRendererSettings.#ctor(System.String,Microsoft.Extensions.FileProviders.IFileProvider)">
            <summary>
            Constructs a new instance of the settings object
            </summary>
            <param name="typeFullName">If no type is set, the renderer can attempt to use this string value to determine routing</param>
            <param name="fileProvider">A file provider used for checking for the existence of views</param>
        </member>
        <member name="P:Penguin.Web.Mvc.Dynamic.Paths.AdminRenderBase">
            <summary>
            The path to check for admin dynamic rendering views
            </summary>
        </member>
        <member name="P:Penguin.Web.Mvc.Dynamic.Paths.EditBase">
            <summary>
            The path that the dynamic wrapper resides in
            </summary>
        </member>
        <member name="P:Penguin.Web.Mvc.Dynamic.Paths.RenderBase">
            <summary>
            The path that the dynamic client visible renderers exists in
            </summary>
        </member>
        <member name="T:Penguin.Web.Mvc.Dynamic.ViewPathValidation">
            <summary>
            Represents the result of validating a view path for existence
            </summary>
        </member>
        <member name="P:Penguin.Web.Mvc.Dynamic.ViewPathValidation.FoundPath">
            <summary>
            True if any path was found
            </summary>
        </member>
        <member name="P:Penguin.Web.Mvc.Dynamic.ViewPathValidation.ValidationResults">
            <summary>
            A collection of results for the checked paths
            </summary>
        </member>
        <member name="M:Penguin.Web.Mvc.Dynamic.ViewPathValidation.#ctor(System.String,Microsoft.Extensions.FileProviders.IFileProvider,System.Collections.Generic.List{System.String})">
             <summary>
            
             </summary>
             <param name="path"></param>
             <param name="fileProvider"></param>
             <param name="pathsToCheck">A list of {0} format strings to inject the path into</param>
        </member>
        <member name="M:Penguin.Web.Mvc.Dynamic.ViewPathValidation.Result(System.Boolean)">
            <summary>
            Returns the first matching result
            </summary>
            <param name="SurpressError">If false, throws a file not found exception if no matches are found</param>
            <returns>A matching path or null if errors are surpressed</returns>
        </member>
        <member name="T:Penguin.Web.Mvc.Dynamic.ViewValidationResult">
            <summary>
            Represents the result of validating a single path
            </summary>
        </member>
        <member name="P:Penguin.Web.Mvc.Dynamic.ViewValidationResult.Exists">
            <summary>
            If true, this path exists on disk
            </summary>
        </member>
        <member name="P:Penguin.Web.Mvc.Dynamic.ViewValidationResult.Path">
            <summary>
            The path that was checked
            </summary>
        </member>
        <member name="M:Penguin.Web.Mvc.Dynamic.ViewValidationResult.ToString">
            <summary>
            ToString returns the path and the bool representing its existence for debug view
            </summary>
            <returns>Returns the path and the bool representing its existence for debug view</returns>
        </member>
    </members>
</doc>
